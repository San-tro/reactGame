[{"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\index.js":"1","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\App.js":"2","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\reportWebVitals.js":"3","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\useInterval.js":"4"},{"size":517,"mtime":1611699485517,"results":"5","hashOfConfig":"6"},{"size":3154,"mtime":1611699907189,"results":"7","hashOfConfig":"6"},{"size":375,"mtime":1611699485518,"results":"8","hashOfConfig":"6"},{"size":512,"mtime":1611699485518,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"10d1f0o",{"filePath":"13","messages":"14","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"20"},"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\index.js",[],["21","22"],"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\App.js",["23","24","25","26","27","28"],"\"use strict\";\r\nimport red from './red.png';\r\nimport green from './green.png';\r\nimport white from './white.png';\r\nimport grey from './grey.png';\r\nimport './App.css';\r\n\r\n//const dbConnection = require(\"./models/dbConnection\");\r\n//const init_models = require('./models/init-models');\r\n\r\nconst {useState} = require(\"react\");\r\nconst  useInterval = require(\"./useInterval\");\r\n\r\nconst axios = require('axios');\r\n\r\nfunction testbd(){// переделать под игрульку\r\n\r\naxios.get('http://localhost:3001/landscape')// пример получения\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    axios.post(`http://localhost:3001/leaderbord/add`,{// пример добавления\r\n        Name: '',\r\n        Time: '',\r\n        Score: '',\r\n        }\r\n    );\r\n}\r\n\r\nconst FIELD_SIZE = 17;\r\nconst FIELD_ROW = [...new Array(FIELD_SIZE).keys()];\r\n\r\nconst textureMap1x = [1,2,3,4,5,6,7,8,9];\r\nconst textureMap1y = [1,1,1,1,2,2,2,3,4];\r\n\r\n\r\nlet randItem = {\r\n  x: Math.floor(Math.random() * FIELD_SIZE),\r\n  y: Math.floor(Math.random() * FIELD_SIZE)\r\n}\r\n\r\nconst  DIRECTION = {\r\n  39: {x: 1, y: 0},\r\n  37: {x: -1, y: 0},\r\n  38: {x: 0, y: -1},\r\n  40: {x: 0, y: 1},\r\n}\r\n\r\nfunction getItem(x,y,personSegments, x1, y1) {\r\n  if(randItem.x === x && randItem.y === y){\r\n    return green\r\n  }\r\n\r\n  for(let i = 0; i< x1.length; i++){\r\n    if(x1[i] === x && y1[i] === y){\r\n      return white\r\n    }\r\n  }\r\n\r\n  for (const  segment of personSegments){\r\n    if (segment.x === x && segment.y === y){\r\n      return red\r\n    }\r\n  }\r\n}\r\n\r\nfunction limitByField(j) {\r\n  if(j >= FIELD_SIZE){\r\n    return 0;\r\n  }\r\n  if(j < 0) {\r\n    return FIELD_SIZE - 1;\r\n  }\r\n return j;\r\n}\r\n\r\nfunction newPersonPosition(segments, direction,xMap,yMap) {\r\n  let go = true;\r\n  let x1 = segments[0].x + direction.x;\r\n  let y1 = segments[0].y + direction.y;\r\n  for(let i = 0; i< xMap.length; i++) {\r\n    if (x1 == xMap[i] && y1 == yMap[i]) {\r\n      go = false\r\n    }\r\n  }\r\n  if(go){\r\n    return segments.map(segment => ({\r\n      x: limitByField(segment.x + direction.x),\r\n      y: limitByField(segment.y + direction.y)\r\n    }));\r\n    }\r\n  else {\r\n    return segments.map(segment => ({\r\n      x: limitByField(segment.x),\r\n      y: limitByField(segment.y)\r\n    }));\r\n  }\r\n\r\n}\r\n\r\nfunction App() {\r\n  const [personSegments,setPersonSegments] = useState([\r\n    {x:8,y:8}\r\n  ]);\r\n\r\n  const movePerson = ({keyCode}) =>\r\n      keyCode >= 37 && keyCode <= 40 && setPersonSegments(segments => newPersonPosition(segments, DIRECTION[keyCode], textureMap1x,textureMap1y));\r\n\r\n  return (\r\n<div role=\"button\" tabIndex=\"0\" onKeyDown={e => movePerson(e)} >\r\n  <p >Adventure-lite</p>\r\n    <div id=\"gor\">\r\n      <div id=\"vert\">\r\n        {FIELD_ROW.map(y =>(\r\n            <div class=\"sqrow\" key={y}>\r\n              {FIELD_ROW.map(x => (\r\n                  <img class=\"sq\" key={x} src={getItem(x,y,personSegments, textureMap1x ,textureMap1y) || grey}/>\r\n              ))}\r\n            </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\reportWebVitals.js",[],"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\useInterval.js",["29"],"\"use strict\";\r\nconst { useEffect, useRef } = require(\"react\");\r\n\r\nmodule.exports = function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n        }, [callback]);\r\n    // Set up the interval.\r\n useEffect(() => {\r\n     function tick() {\r\n         savedCallback.current();\r\n     }\r\n     if (delay !== null) {\r\n         let id = setInterval(tick, delay);\r\n         return () => clearInterval(id);\r\n     }\r\n     },[delay]);\r\n}",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":1,"nodeType":"36","messageId":"37","endLine":1,"endColumn":14,"fix":"38"},{"ruleId":"39","severity":1,"message":"40","line":12,"column":8,"nodeType":"41","messageId":"42","endLine":12,"endColumn":19},{"ruleId":"39","severity":1,"message":"43","line":16,"column":10,"nodeType":"41","messageId":"42","endLine":16,"endColumn":16},{"ruleId":"44","severity":1,"message":"45","line":87,"column":12,"nodeType":"46","messageId":"47","endLine":87,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":87,"column":29,"nodeType":"46","messageId":"47","endLine":87,"endColumn":31},{"ruleId":"48","severity":1,"message":"49","line":122,"column":19,"nodeType":"50","endLine":122,"endColumn":114},{"ruleId":"34","severity":1,"message":"35","line":1,"column":1,"nodeType":"36","messageId":"37","endLine":1,"endColumn":14,"fix":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"54","text":"55"},"no-unused-vars","'useInterval' is assigned a value but never used.","Identifier","unusedVar","'testbd' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"56","text":"55"},"no-global-assign","no-unsafe-negation",[0,13],"",[0,13]]