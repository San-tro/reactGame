[{"D:\\ReactGame\\reactGame\\adventure-lite\\src\\index.js":"1","D:\\ReactGame\\reactGame\\adventure-lite\\src\\reportWebVitals.js":"2","D:\\ReactGame\\reactGame\\adventure-lite\\src\\App.js":"3","D:\\ReactGame\\reactGame\\adventure-lite\\src\\useInterval.js":"4"},{"size":954,"mtime":1611842576275,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1611700892838,"results":"7","hashOfConfig":"6"},{"size":11846,"mtime":1611842576259,"results":"8","hashOfConfig":"6"},{"size":512,"mtime":1611700892839,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nnp143",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":1,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\ReactGame\\reactGame\\adventure-lite\\src\\index.js",[],"D:\\ReactGame\\reactGame\\adventure-lite\\src\\reportWebVitals.js",[],"D:\\ReactGame\\reactGame\\adventure-lite\\src\\App.js",["19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45"],"\"use strict\";\r\nimport red from './images/red.png';\r\nimport green from './images/green.png';\r\nimport white from './images/white.png';\r\nimport grey from './images/grey.png';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport {useAlert} from 'react-alert'\r\n\r\n\r\nconst {useState} = require(\"react\");// нужно для объявления переменных кторые будут сохранятся между рендерами ХУКИ\r\nconst useInterval = require(\"./useInterval\");// не используется\r\nconst axios = require('axios');\r\n\r\nvar level = 0;\r\nlet game_over = false;\r\nlet FIELD_SIZE = 19;//карта\r\nlet FIELD_ROW = [...new Array(FIELD_SIZE).keys()];//карта\r\n\r\nconst textureMap1x = [0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 0, 1, 2, 3, 0, 1, 2, 0, 1, 0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 10, 11, 12, 13, 14, 15, 16, 17, 18, 11, 12, 13, 14, 15, 16, 17, 18, 12, 13, 14, 15, 16, 17, 18, 13, 14, 15, 16, 17, 18, 14, 15, 16, 17, 18, 15, 16, 17, 18, 16, 17, 18, 17, 18, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 0, 1, 2, 3, 4, 5, 6, 7, 0, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 0, 1, 2, 3, 0, 1, 2, 0, 1, 0, 11, 12, 13, 14, 15, 16, 17, 18, 12, 13, 14, 15, 16, 17, 18, 13, 14, 15, 16, 17, 18, 14, 15, 16, 17, 18, 15, 16, 17, 18, 16, 17, 18, 17, 18, 18];\r\nconst textureMap1y = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 9, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 12, 12, 12, 12, 11, 11, 11, 10, 10, 9, 18, 18, 18, 18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16, 15, 15, 15, 15, 15, 14, 14, 14, 14, 13, 13, 13, 12, 12, 11];\r\n\r\nconst textureMap2x = [4, 8, 11, 12, 14, 14, 2, 4, 6, 7, 8, 10, 14, 16, 2, 4, 12, 14, 16, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 2, 4, 5, 12, 14, 16, 2, 7, 9, 11, 12, 14, 16, 2, 3, 4, 5, 9, 16, 5, 7, 8, 9, 10, 12, 13, 14, 16, 1, 3, 5, 6, 7, 10, 11, 12, 16, 1, 3, 5, 6, 7, 10, 11, 14, 15, 16, 7, 8, 10, 11, 13, 14, 16, 1, 2, 3, 4, 5, 10, 11, 13, 14, 16, 6, 7, 8, 14, 16, 1, 2, 3, 9, 10, 11, 12, 13, 14, 16, 5, 7, 9, 10, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 7, 16, 17, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\r\nconst textureMap2y = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18];\r\n\r\nconst textureMap3x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 10, 15, 16, 1, 5, 6, 7, 8, 9, 10, 12, 13, 15, 1, 3, 13, 15, 16, 1, 3, 4, 6, 7, 8, 9, 11, 13, 1, 4, 5, 6, 9, 10, 11, 13, 15, 16, 1, 4, 12, 13, 16, 1, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 1, 7, 10, 13, 14, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 1, 3, 7, 9, 10, 11, 13, 1, 5, 6, 7, 11, 13, 15, 16, 17, 1, 2, 3, 4, 5, 9, 13, 16, 1, 7, 8, 9, 11, 12, 13, 14, 3, 4, 5, 7, 8, 9, 11, 14, 16, 17, 2, 3, 9, 11, 12, 17, 5, 7, 11, 14, 16, 17, 2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17];\r\nconst textureMap3y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17];\r\n\r\nconst textureMap4x = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 18, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 16, 1, 11, 12, 13, 16, 4, 7, 9, 11, 13, 15, 16, 2, 4, 5, 7, 9, 10, 11, 13, 2, 4, 6, 7, 15, 16, 17, 2, 6, 8, 9, 10, 11, 12, 14, 15, 17, 2, 3, 5, 6, 9, 12, 14, 3, 6, 8, 9, 12, 14, 16, 17, 1, 3, 6, 9, 11, 12, 14, 1, 3, 4, 6, 8, 9, 11, 14, 17, 1, 2, 3, 6, 11, 17, 1, 5, 6, 7, 8, 9, 11, 13, 14, 17, 1, 2, 5, 9, 15, 16, 17, 1, 2, 3, 5, 7, 9, 10, 11, 13, 14, 1, 5, 7, 9, 12, 13, 16, 1, 3, 5, 7, 9, 11, 12, 15, 16, 1, 2, 3, 7, 14, 15];\r\nconst textureMap4y = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17];\r\n\r\nconst lolFishX = [[-1], [true]];\r\nconst lolFishXY = [-1];\r\n\r\nconst firstFishX = [[9], [true]];\r\nconst firstFishXY = [9];\r\n\r\nconst secondFishX = [[9], [true]];\r\nconst secondFishXY = [8];\r\n\r\nconst thirdFishX = [[11], [true]];\r\nconst thirdFishY = [7];\r\n\r\nlet fishCount = 0;\r\n\r\nconst allFishX = [lolFishX, firstFishX, secondFishX, thirdFishX];\r\nconst allFishY = [lolFishXY, firstFishXY, secondFishXY, thirdFishY];\r\n\r\nlet allMapX = [textureMap1x, textureMap2x, textureMap3x, textureMap4x];\r\nlet allMapY = [textureMap1y, textureMap2y, textureMap3y, textureMap4y];\r\n\r\nallMapX[0].push(18);\r\nallMapY[0].push(10);\r\n//allMapX[0].pop();\r\n//allMapY[0].pop();\r\n\r\nconst DIRECTION = { // идентификация кнопок управления\r\n    39: {x: 1, y: 0},\r\n    37: {x: -1, y: 0},\r\n    38: {x: 0, y: -1},\r\n    40: {x: 0, y: 1},\r\n};\r\n\r\nfunction getItem(x, y, personSegments, x1, y1, fishX, fishY) {//  отрисовка уровня в первый раз\r\n    if (fishX[0] == x && fishY == y && fishX[1]) {// отрисовка предмета\r\n        return green\r\n    }\r\n    for (let i = 0; i < x1.length; i++) {//отрисовка текстур (стен)\r\n        if (x1[i] === x && y1[i] === y) {\r\n            return white\r\n        }\r\n    }\r\n    for (const segment of personSegments) {// отрисовка игрока\r\n        if (segment.x === x && segment.y === y) {\r\n            return red\r\n        } else if (segment.x == fishX[0] && segment.y == fishY[0] && fishX[1]) {\r\n            allFishX[level][1] = false;\r\n            fishCount++;\r\n        }\r\n    }\r\n    if (fishCount == 3) {\r\n        console.log(\"Win\");\r\n    }\r\n}\r\n\r\nfunction limitByField(j) {// ограничение по полю\r\n    if (j >= FIELD_SIZE) {\r\n        return 0;\r\n    }\r\n    if (j < 0) {\r\n        return FIELD_SIZE - 1;\r\n    }\r\n    return j;\r\n}\r\n\r\nfunction newPersonPosition(segments, direction, xMap, yMap, GO) { // перемещение игрока\r\n    if (!GO) {\r\n        let go = true;\r\n        let x1 = segments[0].x + direction.x;\r\n        let y1 = segments[0].y + direction.y;\r\n        for (let i = 0; i < xMap.length; i++) {\r\n            if (x1 == xMap[i] && y1 == yMap[i]) {// проверка на столкновение с текстурой\r\n                go = false\r\n            }\r\n        }\r\n        if (go) { // задание нового положения\r\n            if (level == 0) {\r\n                if (x1 == -1 && y1 == 8)\r\n                    level = 2;\r\n                else if (x1 == 8 && y1 == -1) {\r\n                    level = 3;\r\n                } else if (x1 == 10 && y1 == 19) {\r\n                    level = 1;\r\n                }\r\n            } else if (level == 2) {\r\n                if (x1 == 19 && y1 == 8) {\r\n                    level = 0;\r\n                }\r\n            } else if (level == 1) {\r\n                if (x1 == 10 && y1 == -1)\r\n                    level = 0;\r\n            } else if (level == 3) {\r\n                if (x1 == 8 && y1 == 19)\r\n                    level = 0;\r\n            }\r\n\r\n            return segments.map(segment => ({\r\n                x: limitByField(x1),\r\n                y: limitByField(y1)\r\n            }));\r\n\r\n        } else {\r\n            return segments.map(segment => ({\r\n                x: limitByField(segment.x),\r\n                y: limitByField(segment.y)\r\n            }));\r\n        }\r\n    } else {\r\n        return segments.map(segment => ({\r\n            x: limitByField(segment.x),\r\n            y: limitByField(segment.y)\r\n        }));\r\n    }\r\n}\r\n\r\n///ТАЙМЕР\r\nvar now = new Date();\r\n\r\n///\r\nfunction App() {\r\n    const [personSegments, setPersonSegments] = useState([// значения переменных сохраняются между рендерингами\r\n        {x: 9, y: 9}\r\n    ]);\r\n\r\n    const movePerson = ({keyCode}) =>\r\n        !game_over && keyCode >= 37 && keyCode <= 40 && setPersonSegments(segments => newPersonPosition(segments, DIRECTION[keyCode], allMapX[level], allMapY[level], game_over));\r\n\r\n    const alert = useAlert();\r\n    if (fishCount == 3) {\r\n        game_over = true;\r\n        var dateend = new Date();\r\n        var scoreTime = new Date(dateend.getTime() - now.getTime());\r\n        alert.show('Победа! Ваше время: ' + \"минут: \" + scoreTime.getMinutes() + \" секунд: \" + scoreTime.getSeconds())\r\n        axios.post(`http://localhost:3001/leaderbord/add`, {\r\n                Name: \"player1\",\r\n                Time: \"минут: \" + scoreTime.getMinutes() + \" секунд: \" + scoreTime.getSeconds(),\r\n                Score: \"100 очков Гриффиндору!\"\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div role=\"button\" tabIndex=\"0\" onKeyDown={e => movePerson(e)}>\r\n            <p>Adventure-lite</p>\r\n            <div id=\"gor\">\r\n                <div id=\"vert\">\r\n                    {FIELD_ROW.map(y => (\r\n                        <div class=\"sqrow\" key={y}>\r\n                            {FIELD_ROW.map(x => (\r\n                                <img class=\"sq\" key={x}\r\n                                     src={getItem(x, y, personSegments, allMapX[level], allMapY[level], allFishX[level], allFishY[level]) || grey}/>\r\n                            ))}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","D:\\ReactGame\\reactGame\\adventure-lite\\src\\useInterval.js",["46"],{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","endLine":1,"endColumn":14,"fix":"51"},{"ruleId":"52","severity":1,"message":"53","line":10,"column":8,"nodeType":"54","messageId":"55","endLine":10,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":11,"column":7,"nodeType":"54","messageId":"55","endLine":11,"endColumn":12},{"ruleId":"57","severity":1,"message":"58","line":63,"column":15,"nodeType":"59","messageId":"60","endLine":63,"endColumn":17},{"ruleId":"57","severity":1,"message":"58","line":63,"column":29,"nodeType":"59","messageId":"60","endLine":63,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":77,"column":23,"nodeType":"59","messageId":"60","endLine":77,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":77,"column":48,"nodeType":"59","messageId":"60","endLine":77,"endColumn":50},{"ruleId":"57","severity":1,"message":"58","line":82,"column":16,"nodeType":"59","messageId":"60","endLine":82,"endColumn":18},{"ruleId":"57","severity":1,"message":"58","line":102,"column":12,"nodeType":"59","messageId":"60","endLine":102,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":102,"column":29,"nodeType":"59","messageId":"60","endLine":102,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":108,"column":14,"nodeType":"59","messageId":"60","endLine":108,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":109,"column":14,"nodeType":"59","messageId":"60","endLine":109,"endColumn":16},{"ruleId":"57","severity":1,"message":"58","line":109,"column":26,"nodeType":"59","messageId":"60","endLine":109,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":111,"column":19,"nodeType":"59","messageId":"60","endLine":111,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":111,"column":30,"nodeType":"59","messageId":"60","endLine":111,"endColumn":32},{"ruleId":"57","severity":1,"message":"58","line":113,"column":19,"nodeType":"59","messageId":"60","endLine":113,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":113,"column":31,"nodeType":"59","messageId":"60","endLine":113,"endColumn":33},{"ruleId":"57","severity":1,"message":"58","line":115,"column":22,"nodeType":"59","messageId":"60","endLine":115,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":116,"column":17,"nodeType":"59","messageId":"60","endLine":116,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":116,"column":29,"nodeType":"59","messageId":"60","endLine":116,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":121,"column":22,"nodeType":"59","messageId":"60","endLine":121,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":122,"column":17,"nodeType":"59","messageId":"60","endLine":122,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":122,"column":29,"nodeType":"59","messageId":"60","endLine":122,"endColumn":31},{"ruleId":"57","severity":1,"message":"58","line":124,"column":22,"nodeType":"59","messageId":"60","endLine":124,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":125,"column":17,"nodeType":"59","messageId":"60","endLine":125,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":125,"column":28,"nodeType":"59","messageId":"60","endLine":125,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":163,"column":19,"nodeType":"63","endLine":163,"endColumn":151},{"ruleId":"47","severity":1,"message":"48","line":1,"column":1,"nodeType":"49","messageId":"50","endLine":1,"endColumn":14,"fix":"64"},"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"65","text":"66"},"no-unused-vars","'useInterval' is assigned a value but never used.","Identifier","unusedVar","'axios' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"67","text":"66"},[0,13],"",[0,13]]