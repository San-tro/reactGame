[{"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\index.js":"1","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\reportWebVitals.js":"2","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\App.js":"3","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\useInterval.js":"4"},{"size":517,"mtime":1611826207654,"results":"5","hashOfConfig":"6"},{"size":375,"mtime":1611699485518,"results":"7","hashOfConfig":"6"},{"size":8623,"mtime":1611826197271,"results":"8","hashOfConfig":"6"},{"size":512,"mtime":1611699485518,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"10d1f0o",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"20","usedDeprecatedRules":"21"},"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\index.js",[],["22","23"],"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\reportWebVitals.js",[],"C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\App.js",["24","25","26","27","28","29","30","31","32","33","34","35"],"\"use strict\";\r\nimport red from './images/red.png';\r\nimport green from './images/green.png';\r\nimport white from './images/white.png';\r\nimport grey from './images/grey.png';\r\nimport './App.css';\r\n\r\n\r\nconst {useState} = require(\"react\");// нужно для объявления переменных кторые будут сохранятся между рендерами ХУКИ\r\nconst  useInterval = require(\"./useInterval\");// не используется\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst FIELD_SIZE = 19;//карта\r\nconst FIELD_ROW = [...new Array(FIELD_SIZE).keys()];//карта\r\n\r\nconst textureMap1x = [0,1,2,3,4,5,6,7,8,0,1,2,3,4,5,6,7,0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4,0,1,2,3,0,1,2,0,1,0, 10,11,12,13,14,15,16,17,18,11,12,13,14,15,16,17,18,12,13,14,15,16,17,18,13,14,15,16,17,18,14,15,16,17,18,15,16,17,18,16,17,18,17,18,18, 0,1,2,3,4,5,6,7,8,0,1,2,3,4,5,6,7,0,1,2,3,4,5,6,0,1,2,3,4,5,0,1,2,3,4,0,1,2,3,0,1,2,0,1,0, 10,11,12,13,14,15,16,17,18,11,12,13,14,15,16,17,18,12,13,14,15,16,17,18,13,14,15,16,17,18,14,15,16,17,18,15,16,17,18,16,17,18,17,18,18];\r\nconst textureMap1y = [0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,5,5,5,5,6,6,6,7,7,8,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4,4,4,5,5,5,5,6,6,6,7,7,8, 18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,15,15,15,15,15,15,14,14,14,14,14,13,13,13,13,12,12,12,11,11,10, 18,18,18,18,18,18,18,18,18,17,17,17,17,17,17,17,17,16,16,16,16,16,16,16,15,15,15,15,15,15,14,14,14,14,14,13,13,13,13,12,12,12,11,11,10];\r\n\r\nconst  textureMap2x = [4,8,10,11,12,14,14,2,4,6,7,8,10,14,16,2,4,12,14,16,2,3,4,5,6,7,8,9,10,11,12,14,16,2,4,5,12,14,16,2,7,9,11,12,14,16,2,3,4,5,9,16,5,7,8,9,10,12,13,14,16,1,3,5,6,7,10,11,12,16,1,3,5,6,7,10,11,14,15,16, 7, 8, 10,11,13,14,16, 1, 2, 3, 4, 5, 10,11,13,14,16, 6, 7, 8,14,16, 1, 2, 3, 9, 10,11,12,13,14,16, 5, 7, 9, 10, 3, 4, 5, 6, 7, 10,11,12,13,14,16,17, 7,16,17,0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18];\r\nconst  textureMap2y = [1,1,1, 1, 1, 1, 1,2,2,2,2,2,2, 2, 2,3,3, 3, 3, 3,4,4,4,4,4,4,4,4,4, 4, 4, 4, 4,5,5,5, 5, 5, 5,6,6,6, 6, 6, 6, 6,7,7,7,7,7, 7,8,8,8,8,8, 8, 8, 8, 8,9,9,9,9,9,9, 9, 9, 9,10,10,10,10,10,10, 10, 10, 10, 10,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17, 17,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,1, 1,2, 2,3, 3,4, 4,5, 5,6, 6,7, 7,8, 8,9, 9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18];\r\n\r\nconst  textureMap3x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,16,17,18,1,2,3,10,15,16,1,5,6,7,8,9,10,12,13,15,1,3,13,15,16,1,3,4,6,7,8,9,11,13,1,4,5,6,9,10,11,13,15,16,1,4,12,13,16,1,3,4,6,7,8,9,10,12,13,15,16,1,7,10,13,14,1,3,4,5,6,7,10,11,14,16, 1, 3, 7, 9,10,11,13, 1, 5, 6, 7,11,13,15,16,17, 1, 2, 3, 4, 5, 9,13,16, 1, 7, 8, 9,11,12,13,14, 3, 4, 5, 7, 8, 9,11,14,16,17, 2, 3, 9,11,12,17, 5, 7,11,14,16,17, 2, 3, 7, 8, 9,10,11,12,14,15,16,17];\r\nconst  textureMap3y = [0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,1, 1,2, 2,3, 3,4, 4,5, 5,6, 6,7, 7,8, 8,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,1,1, 1, 1, 1,2,2,2,2,2,2, 2, 2, 2, 2,3,3, 3, 3, 3,4,4,4,4,4,4,4, 4, 4,5,5,5,5,5, 5, 5, 5, 5, 5,6,6, 6, 6, 6,7,7,7,7,7,7,7, 7, 7, 7, 7, 7,8,8, 8, 8, 8,9,9,9,9,9,9, 9, 9, 9, 9,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,17,17,17];\r\n\r\nconst  textureMap4x = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18,0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0,18, 0, 1, 2, 3, 4, 5, 6, 7, 8,10,11,12,13,14,15,16,17,18,1,2,3,4,5,6,7,8,9,10,11,15,16,1,11,12,13,16,4,7,9,11,13,15,16,2,4,5,7,9,10,11,13,2,4,6,7,15,16,17,2,6,8,9,10,11,12,14,15,17,2,3,5,6,9,12,14,3,6,8,9,12,14,16,17,1,3,6,9,11,12,14, 1, 3, 4, 6, 8, 9,11,14,17, 1, 2, 3, 6,11,17, 1, 5, 6, 7, 8, 9,11,13,14,17, 1, 2, 5, 9,15,16,17, 1, 2, 3, 5, 7, 9,10,11,13,14, 1, 5, 7, 9,12,13,16, 1, 3, 5, 7, 9,11,12,15,16, 1, 2, 3, 7,14,15];\r\nconst  textureMap4y = [0,0,0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,1, 1,2, 2,3, 3,4, 4,5, 5,6, 6,7, 7,8, 8,9, 9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,1,1,1,1,1,1,1,1,1, 1, 1, 1, 1,2, 2, 2, 2, 2,3,3,3, 3, 3, 3, 3,4,4,4,4,4, 4, 4, 4,5,5,5,5, 5, 5, 5,6,6,6,6, 6, 6, 6, 6, 6, 6,7,7,7,7,7, 7, 7,8,8,8,8, 8, 8, 8, 8,9,9,9,9, 9, 9, 9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17];\r\n\r\nlet randItem = {//рандомное расположение предмета\r\n  x: Math.floor(Math.random() * FIELD_SIZE),\r\n  y: Math.floor(Math.random() * FIELD_SIZE)\r\n};\r\n\r\nconst  DIRECTION = { // идентификация кнопок управления\r\n  39: {x: 1, y: 0},\r\n  37: {x: -1, y: 0},\r\n  38: {x: 0, y: -1},\r\n  40: {x: 0, y: 1},\r\n};\r\n\r\nfunction getItem(x,y,personSegments, x1, y1) {//  отрисовка уровня в первый раз\r\n  if(randItem.x === x && randItem.y === y){// отрисовка предмета\r\n    return green\r\n  }\r\n\r\n  for(let i = 0; i< x1.length; i++){//отрисовка текстур (стен)\r\n    if(x1[i] === x && y1[i] === y){\r\n      return white\r\n    }\r\n  }\r\n\r\n  for (const  segment of personSegments){// отрисовка игрока\r\n    if (segment.x === x && segment.y === y){\r\n      return red\r\n    }\r\n  }\r\n}\r\n\r\nfunction limitByField(j) {// ограничение по полю\r\n  if(j >= FIELD_SIZE){\r\n    return 0;\r\n  }\r\n  if(j < 0) {\r\n    return FIELD_SIZE - 1;\r\n  }\r\n return j;\r\n}\r\n\r\nfunction newPersonPosition(segments, direction,xMap,yMap) { // перемещение игрока\r\n  let go = true;\r\n  let x1 = segments[0].x + direction.x;\r\n  let y1 = segments[0].y + direction.y;\r\n  for(let i = 0; i< xMap.length; i++) {\r\n    if (x1 == xMap[i] && y1 == yMap[i]) {// проверка на столкновение с текстурой\r\n      go = false\r\n    }\r\n  }\r\n  if(go){ // задание нового положения\r\n    return segments.map(segment => ({\r\n      x: limitByField(segment.x + direction.x),\r\n      y: limitByField(segment.y + direction.y)\r\n    }));\r\n    }\r\n  else {\r\n    return segments.map(segment => ({\r\n      x: limitByField(segment.x),\r\n      y: limitByField(segment.y)\r\n    }));\r\n  }\r\n\r\n}\r\n\r\nfunction App() {\r\n\r\n\r\n  const [personSegments,setPersonSegments] = useState([// значения переменных сохраняются между рендерингами\r\n    {x:9,y:9}\r\n  ]);\r\n\r\n  const movePerson = ({keyCode}) =>\r\n      keyCode >= 37 && keyCode <= 40 && setPersonSegments(segments => newPersonPosition(segments, DIRECTION[keyCode], textureMap4x,textureMap4y));\r\n\r\n  return (\r\n<div role=\"button\" tabIndex=\"0\" onKeyDown={e => movePerson(e)} >\r\n  <p>Adventure-lite</p>\r\n    <div id=\"gor\">\r\n      <div id=\"vert\">\r\n        {FIELD_ROW.map(y =>(\r\n            <div class=\"sqrow\" key={y}>\r\n              {FIELD_ROW.map(x => (\r\n                  <img class=\"sq\" key={x} src={getItem(x,y,personSegments, textureMap4x ,textureMap4y) || grey}/>\r\n              ))}\r\n            </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n/* (НЕРАБОТАЕТ) РАБОТА С БД\r\nfunction testbd(){// переделать под игрульку\r\n\r\naxios.get('http://localhost:3001/landscape')// пример получения\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    axios.post(`http://localhost:3001/leaderbord/add`,{// пример добавления\r\n        Name: '',\r\n        Time: '',\r\n        Score: '',\r\n        }\r\n    );\r\n}\r\n\r\n//////////////////////////////////////////////////////////////////\r\n\r\nasync function getMap(){\r\n  try {\r\n    const response = await axios.get('http://localhost:3001/landscape');\r\n    return  response\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n\r\n}\r\n\r\nvar maps = getMap();\r\n\r\n* */","C:\\Users\\Konstantin\\Documents\\reactapp\\reactGame\\adventure-lite\\src\\useInterval.js",["36"],"\"use strict\";\r\nconst { useEffect, useRef } = require(\"react\");\r\n\r\nmodule.exports = function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n        }, [callback]);\r\n    // Set up the interval.\r\n useEffect(() => {\r\n     function tick() {\r\n         savedCallback.current();\r\n     }\r\n     if (delay !== null) {\r\n         let id = setInterval(tick, delay);\r\n         return () => clearInterval(id);\r\n     }\r\n     },[delay]);\r\n}",["37","38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":1,"nodeType":"45","messageId":"46","endLine":1,"endColumn":14,"fix":"47"},{"ruleId":"48","severity":1,"message":"49","line":10,"column":8,"nodeType":"50","messageId":"51","endLine":10,"endColumn":19},{"ruleId":"48","severity":1,"message":"52","line":11,"column":7,"nodeType":"50","messageId":"51","endLine":11,"endColumn":12},{"ruleId":"48","severity":1,"message":"53","line":18,"column":7,"nodeType":"50","messageId":"51","endLine":18,"endColumn":19},{"ruleId":"48","severity":1,"message":"54","line":19,"column":7,"nodeType":"50","messageId":"51","endLine":19,"endColumn":19},{"ruleId":"48","severity":1,"message":"55","line":21,"column":8,"nodeType":"50","messageId":"51","endLine":21,"endColumn":20},{"ruleId":"48","severity":1,"message":"56","line":22,"column":8,"nodeType":"50","messageId":"51","endLine":22,"endColumn":20},{"ruleId":"48","severity":1,"message":"57","line":24,"column":8,"nodeType":"50","messageId":"51","endLine":24,"endColumn":20},{"ruleId":"48","severity":1,"message":"58","line":25,"column":8,"nodeType":"50","messageId":"51","endLine":25,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":75,"column":12,"nodeType":"61","messageId":"62","endLine":75,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":75,"column":29,"nodeType":"61","messageId":"62","endLine":75,"endColumn":31},{"ruleId":"63","severity":1,"message":"64","line":112,"column":19,"nodeType":"65","endLine":112,"endColumn":114},{"ruleId":"43","severity":1,"message":"44","line":1,"column":1,"nodeType":"45","messageId":"46","endLine":1,"endColumn":14,"fix":"66"},{"ruleId":"39","replacedBy":"67"},{"ruleId":"41","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"71","text":"72"},"no-unused-vars","'useInterval' is assigned a value but never used.","Identifier","unusedVar","'axios' is assigned a value but never used.","'textureMap1x' is assigned a value but never used.","'textureMap1y' is assigned a value but never used.","'textureMap2x' is assigned a value but never used.","'textureMap2y' is assigned a value but never used.","'textureMap3x' is assigned a value but never used.","'textureMap3y' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"73","text":"72"},["69"],["70"],"no-global-assign","no-unsafe-negation",[0,13],"",[0,13]]